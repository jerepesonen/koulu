# Kotitehtävät 4
#Hae osaston A työntekijät formaatissa "SUKUNIMI A" (sukunimi ja etunimen ensimmäinen kirjain). Lajittele hakutulokset sukunimen mukaan. Ota listaukseen mukaan osaston tehtävä (Duty). Hae tulokset käyttäen molempia seuraavista: 
	#Uusi liitossyntaksi
    #Vanha liitossyntaksi
SELECT DEPT.DUTY, CONCAT(EMPS.SURNAME, ' ', lEFT(EMPS.GNAME, 1)) AS EMPLOYEE 
FROM EMPS INNER JOIN DEPT
ON EMPS.DEPT = DEPT.DEPT
WHERE EMPS.DEPT LIKE 'A' 
ORDER BY SURNAME;

SELECT DEPT.DUTY, CONCAT(EMPS.SURNAME, ' ', lEFT(EMPS.GNAME, 1)) AS EMPLOYEE
FROM EMPS, DEPT
WHERE EMPS.DEPT = DEPT.DEPT AND EMPS.DEPT LIKE 'A'
ORDER BY SURNAME;

#Hae MB-provinssista (PROV) kotoisin olevat henkilöt (työntekijän numero ja koko nimi), joiden manageri on Black D.

SELECT EMPS.GNAME, EMPS.SURNAME, EMPS.EMPNUM FROM EMPS 
WHERE PROV LIKE 'MB' AND EMPS.DEPT = 
(SELECT DEPT.DEPT FROM DEPT WHERE DEPT.MANAGER LIKE 'Black D');

#Hae kaikki managerit, joilla on yli 10 alaista. Tulosjoukkoon tulee managerin lisäksi alaisten lukumäärä. 
#Nimeä tulosjoukon sarakkeet "Manageri" ja "Alaisia". Lajittele hakutulokset alaisten lukumäärän mukaan laskevaan järjestykseen.

SELECT DEPT.MANAGER AS MANAGERI, COUNT(*) AS ALAISIA
FROM EMPS INNER JOIN DEPT
ON EMPS.DEPT = DEPT.DEPT
GROUP BY MANAGERI
HAVING ALAISIA > 10
ORDER BY ALAISIA DESC;

#Tee listaus yhteen sarakkeeseen, johon tulee sekä työntekijöiden nimet (etunimi, sukunimi) että managerien nimet. 
#Tulosjoukkoon sarakkeen nimeksi "nimi". Toiseen sarakkeeseen tulee tieto siitä, onko kyseessä työntekijä vai pomo. 
#Toisen sarakkeen nimeksi tulee "Tyyppi". Lajittelu ensisijaisesti tyypin ja sitten nimen mukaan.

SELECT CONCAT(EMPS.GNAME, ' ', EMPS.SURNAME) AS Nimi, 'Työntekijä' as Tyyppi FROM EMPS
UNION
SELECT DEPT.MANAGER AS Nimi, 'Pomo' as Tyyppi FROM DEPT
ORDER BY Tyyppi, Nimi;

SELECT * FROM EMPS;

#Hae tietokannasta alikyselyn avulla kaikki työntekijät, joiden rate-arvo on suurin mahdollinen.

SELECT * FROM EMPS WHERE RATE =
	(SELECT MAX(RATE) FROM EMPS);

#Hae tietokannasta sellaiset A-osastoon kuuluvat henkilöt, joilla on eri rate-arvo kuin B-osastolaisilla (Vinkki: Käytä IN-alikyselyä!)
SELECT * FROM EMPS WHERE DEPT = 'A' AND RATE NOT IN (SELECT RATE FROM EMPS WHERE DEPT = 'B');

#Listaa osastoon A kuuluvat henkilöt vain jos A-osaston budjetti on suurempi kuin 50000
SELECT * FROM EMPS WHERE DEPT = 'A' AND DEPT IN (SELECT DEPT FROM DEPT WHERE BUDGET > 50000);

#Listaa työntekijät, jotka eivät ole managereina osastoilla (Vinkki: Muista tuoda työntekijöiden nimet vertailussa samaan formaattiin kuin managerien!).
SELECT * FROM EMPS WHERE CONCAT(SURNAME, ' ', SUBSTRING(GNAME, 1,1)) NOT IN (SELECT MANAGER FROM DEPT);